{"version":3,"sources":["reportWebVitals.js","movieList/index.js","movieList/movieImages/harry-potter.jpg","movieList/movieImages/edge-of-tomorrow.jpg","movieList/movieImages/mission-impossible.jpg","movieQuiz/index.js","login/constants.js","login/index.js","login/actions.js","login/reducer.js","client/constants.js","client/reducer.js","index-reducer.js","firebase/context.js","firebase/firebase.js","firebase/index.js","login/sagas.js","client/actions.js","index-sagas.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MovieList","Component","MovieQuiz","props","state","moviesSelected","handleSelection","bind","event","a","this","setState","target","value","console","log","className","href","id","onSubmit","handleSubmit","for","type","name","onChange","class","src","hp","alt","eot","mi","React","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","Login","preventDefault","username","loginRequest","hosting","joinSess","joining","hostSess","handleChange","onClick","placeholder","submit","connected","connect","login","formed","reduxForm","form","initialState","data","reducer","action","requesting","successful","CLIENT_SET","CLIENT_UNSET","token","IndexReducer","combineReducers","client","FirebaseContext","createContext","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","app","initializeApp","loginFlow","loginWatcher","browserHistory","createBrowserHistory","loginApi","Consumer","call","put","push","takeEvery","IndexSagas","all","LoginSaga","composeSetup","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","Provider","history","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.61e2efe1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Component } from 'react';\r\n\r\nclass MovieList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h1>MOVIES</h1>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MovieList;","export default __webpack_public_path__ + \"static/media/harry-potter.e6aa15a8.jpg\";","export default __webpack_public_path__ + \"static/media/edge-of-tomorrow.49409879.jpg\";","export default __webpack_public_path__ + \"static/media/mission-impossible.934c251d.jpg\";","import React from 'react';\r\nimport hp from '../movieList/movieImages/harry-potter.jpg'\r\nimport eot from '../movieList/movieImages/edge-of-tomorrow.jpg'\r\nimport mi from '../movieList/movieImages/mission-impossible.jpg'\r\n\r\nclass MovieQuiz extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            moviesSelected: []\r\n        }\r\n\r\n        this.handleSelection = this.handleSelection.bind(this);\r\n    }\r\n\r\n    async handleChange(event){\r\n        await this.setState({ moviesSelected: [...this.state.moviesSelected, event.target.value] })\r\n        console.log(this.state.moviesSelected);\r\n    }\r\n\r\n\r\n    handleSelection(event){\r\n        console.log(event.target.value);\r\n\r\n        this.setState({ moviesSelected: [...this.state.moviesSelected, event.target.value] })\r\n        console.log(this.state.moviesSelected);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"nav-container\">\r\n                    <nav className=\"navbar\">\r\n                        <a href=\"/\" id=\"site-title\">Movie App</a>\r\n                        <nav className=\"navlinks\">\r\n                        <a href=\"/\" className=\"link\" id=\"home\">Home</a>\r\n                        <a href=\"/\" className=\"link\" id=\"instructions\">Instructions</a>\r\n                        <a href=\"/\" className=\"link\" id=\"feedback\">Give feedback</a>\r\n                        </nav>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"body\">\r\n                    <div className=\"forms\">\r\n                        <h2 className=\"form-q\">Choose the movie that you would like to watch the most.</h2>\r\n                        <div className=\"question\">\r\n                            {/* <form className=\"form-content\"> */}\r\n                            <form onSubmit={this.handleSubmit}>\r\n\r\n                                <div className=\"option opt1\">\r\n                                    <label className=\"container\" for=\"harry-potter\">\r\n                                        <input type=\"radio\" id=\"harry-potter\" name=\"q1\" value=\"harry-potter\" onChange={this.handleSelection}/>\r\n                                        <img class=\"image\" src={hp} alt=\"harry potter\"/>\r\n                                    </label>\r\n                                    <p className=\"descriptions\">Harry Potter</p>\r\n                                </div>\r\n                                <div className=\"option opt2\">\r\n                                    <label className=\"container\" for=\"edge-of-tomorrow\">\r\n                                        <input type=\"radio\" id=\"edge-of-tomorrow\" name=\"q1\" value=\"edge-of-tomorrow\" onChange={this.handleSelection}/>\r\n                                        <img class=\"image\" src={eot} alt=\"edge of tomorrow\"/>\r\n                                    </label>\r\n                                    <p className=\"descriptions\">Edge of Tomorrow</p>\r\n                                </div>\r\n                                <div className=\"option opt3\">\r\n                                    <label className=\"container\" for=\"mission-impossible\">\r\n                                        <input type=\"radio\" id=\"mission-impossible\" name=\"q1\" value=\"mission-impossible\" onChange={this.handleSelection}/>\r\n                                        <img class=\"image\" src={mi} alt=\"mission impossible\"/>\r\n                                    </label>\r\n                                    <p className=\"descriptions\">Mission Impossible</p>\r\n                                    </div>\r\n                                </form>\r\n                                \r\n                            <form onSubmit={this.handleSubmit}>\r\n\r\n                                <div className=\"option opt1\">\r\n                                    <label className=\"container\" for=\"harry-potter\">\r\n                                        <input type=\"radio\" id=\"harry-potter\" name=\"q1\" value=\"harry-potter\" onChange={this.handleSelection}/>\r\n                                        <img class=\"image\" src={hp} alt=\"harry potter\"/>\r\n                                    </label>\r\n                                    <p className=\"descriptions\">Harry Potter</p>\r\n                                </div>\r\n                                <div className=\"option opt2\">\r\n                                    <label className=\"container\" for=\"edge-of-tomorrow\">\r\n                                        <input type=\"radio\" id=\"edge-of-tomorrow\" name=\"q1\" value=\"edge-of-tomorrow\" onChange={this.handleSelection}/>\r\n                                        <img class=\"image\" src={eot} alt=\"edge of tomorrow\"/>\r\n                                    </label>\r\n                                    <p className=\"descriptions\">Edge of Tomorrow</p>\r\n                                </div>\r\n                                <div className=\"option opt3\">\r\n                                    <label className=\"container\" for=\"mission-impossible\">\r\n                                        <input type=\"radio\" id=\"mission-impossible\" name=\"q1\" value=\"mission-impossible\" onChange={this.handleSelection}/>\r\n                                        <img class=\"image\" src={mi} alt=\"mission impossible\"/>\r\n                                    </label>\r\n                                    <p className=\"descriptions\">Mission Impossible</p>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            {/* </form> */}\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieQuiz;","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";","import { Component, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\n// import './App.css';\r\n\r\nimport '../styling/styles.css'\r\nimport { removeTypeDuplicates } from '@babel/types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form'; \r\n\r\nimport { loginRequest } from './actions.js';\r\n\r\n// function Session() {\r\n//   function HostingDialogue() {\r\n  \r\n//     console.log(\"a user connected\");\r\n//     return (\r\n//       <h1>Hosting</h1>\r\n//     )\r\n//   }\r\n  \r\n//   function JoiningDialogue() {\r\n//     return (\r\n//       <h1>Joining</h1>\r\n//     )\r\n//   }\r\n\r\n\r\n// }\r\n\r\nclass Login extends Component{\r\n  // const hostSessionButton = document.querySelector(\"#host-session\");\r\n  // const joinSessionButton = document.querySelector(\"#join-session\");\r\n\r\n  // this.state = {\r\n  //   hosting: false,\r\n  //   joining: false\r\n  // }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hosting: false,\r\n      joining: false,\r\n      username: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    // socket.on('new-remote-operations',\r\n    //   ({ editorId, ops }: { editorId: string; ops: string }) => {\r\n    //     if (id.current !== editorId) {\r\n    //       re\r\n    //     }\r\n    //   }\r\n      \r\n    // }))\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({username: event.target.value})\r\n  }\r\n  \r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(\"Username: \", this.state.username);\r\n    // socket.on('new-remote-operations',\r\n    //   ({ editorId, ops }: { editorId: string; ops: string }) => {\r\n    //     if (id.current !== editorId) {\r\n    //       re\r\n    //     }\r\n    //   }\r\n      \r\n    // }))\r\n    this.props.loginRequest({username: this.state.username, hosting: this.state.hosting});\r\n  }\r\n\r\n  joinSess = () => {\r\n    console.log(\"joining session..\");\r\n    \r\n    this.setState({ hosting: false, joining: true})\r\n\r\n\r\n  }\r\n\r\n  hostSess = () => {\r\n    console.log(\"hosting session...\");\r\n    this.setState({ hosting: true, joining: false })\r\n    \r\n  }\r\n\r\n\r\n  \r\n\r\n  //Listeners\r\n  // if (joinSessionButton)\r\n  //   joinSessionButton.addEventListener('click', joinSess);\r\n  // if (hostSessionButton)\r\n  //   hostSessionButton.addEventListener('click', hostSess);\r\n\r\n  \r\n  render() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"nav-container\">\r\n        <nav className=\"navbar\">\r\n          <a href=\"/\" id=\"site-title\">Movie App</a>\r\n          <nav className=\"navlinks\">\r\n            <a href=\"/\" className=\"link\" id=\"home\">Home</a>\r\n            <a href=\"/\" className=\"link\" id=\"instructions\">Instructions</a>\r\n            <a href=\"/\" className=\"link\" id=\"feedback\">Give feedback</a>\r\n          </nav>\r\n        </nav>\r\n      </div>\r\n      <div className=\"body\">\r\n        <div className=\"body-text\">\r\n          <h1>The. Syntax. Choice.</h1>\r\n          <h2>All your movie commitment issues solved!</h2>\r\n        </div>\r\n        <div className=\"body-button\">\r\n          <div className=\"hosting\">\r\n            <button id=\"host-session\" type=\"submit\" onClick={this.hostSess}><h2>Host new session</h2></button>\r\n            {this.state.hosting &&\r\n              <div className=\"host-pop-box\">\r\n                <div className=\"host-pop-content\">\r\n                  <p id=\"host-text\">Enter your name to start hosting</p>\r\n                  <form id=\"host-form\" onSubmit = {this.handleSubmit}>\r\n                  <input class=\"input\" placeholder=\"Speedy Gonzalez\" onChange={this.handleChange}></input>\r\n                    <div className=\"button-host\">\r\n                      <button className=\"cancel\">Cancel</button>\r\n                      <button className=\"submit\" type=\"submit\" >Let's go</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"joining\">\r\n            <button id=\"join-session\" type=\"submit\" onClick={this.joinSess}><h2>Join session</h2></button>\r\n            {this.state.joining && \r\n              <div className=\"join-pop-box\">\r\n                <div className=\"join-pop-content\">\r\n                  <p>Enter your name and group ID to start choosing movies!</p>\r\n                  <form id=\"join-form\">\r\n                    <input class=\"input\" placeholder = \"Speedy Gonzalez\"></input>\r\n                    <input class=\"input\" placeholder = \"#abc123\"></input>\r\n                    <div className=\"button-join\">\r\n                      <button className=\"cancel\">Cancel</button>\r\n                      <button className=\"submit\" type=\"submit\" onClick={this.submit}>Enter</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  login: state.login\r\n});\r\n  \r\nconst connected = connect(mapStateToProps, { loginRequest })(Login);\r\nconst formed = reduxForm({\r\n  form: 'login'\r\n})(connected);\r\n\r\nexport default formed;\r\n\r\n// export default App;\r\n","import { LOGIN_REQUEST } from './constants';\r\n\r\nexport const loginRequest = function loginRequest({ username, hosting }) {\r\n    console.log(\"REQUEST: \", username, hosting);\r\n    return {\r\n        type: LOGIN_REQUEST,\r\n        username,\r\n        hosting\r\n    }\r\n}\r\n","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_ERROR } from './constants';\r\n\r\nconst initialState = {\r\n    data: [],\r\n}\r\n\r\nconst reducer = function loginReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                requesting: true,\r\n                successful: false\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                requesting: false,\r\n                successful: true\r\n            }\r\n        case LOGIN_ERROR:\r\n            return {\r\n                requesting: false,\r\n                successful: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","export const CLIENT_SET = \"CLIENT_SET\";\r\nexport const CLIENT_UNSET = \"CLIENT_UNSET\";","import { CLIENT_SET, CLIENT_UNSET } from './constants';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    token: null\r\n}\r\n\r\nconst reducer = function clientReducer (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CLIENT_SET:\r\n            console.log(\"Client set\");\r\n            return {\r\n                //id: action.token.userId, //double-check if this actually exists\r\n                id: 1,\r\n                username: action.username\r\n            }\r\n        \r\n        case CLIENT_UNSET:\r\n            return {\r\n                id: null,\r\n                username: null\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import { combineReducers } from 'redux';\r\nimport { reducer as form } from 'redux-form';\r\n\r\nimport login from './login/reducer';\r\nimport client from './client/reducer';\r\n\r\nconst IndexReducer = combineReducers({\r\n    login,\r\n    client\r\n});\r\n\r\nexport default IndexReducer;","import React from 'react';\r\n \r\nconst FirebaseContext = React.createContext(null);\r\n \r\nexport default FirebaseContext;","import app from 'firebase/app';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDCpyump31MvSM5B_eM7nm4jNW_zmHdOoM\",\r\n    authDomain: \"unihack-1614967346330.firebaseapp.com\",\r\n    databaseURL: \"https://unihack-1614967346330-default-rtdb.firebaseio.com\",\r\n    projectId: \"unihack-1614967346330\",\r\n    storageBucket: \"unihack-1614967346330.appspot.com\",\r\n    messagingSenderId: \"605007124384\",\r\n    appId: \"1:605007124384:web:48b6c4c1dc793304e336c5\"\r\n};\r\n  \r\nclass Firebase {\r\n    constructor() {\r\n      app.initializeApp(firebaseConfig);\r\n    }\r\n  }\r\n   \r\n  export default Firebase;","import FirebaseContext from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nconst FIREBASE_TOKEN = \"1//0gQCGuSL5pT1aCgYIARAAGBASNwF-L9IrQ1U6xA2OKsIg7hs3VDR4fFceErmXkGTGxxWwL4NcZpv26TVTwEBcqJgqucMm285gjmQ\";\r\n\r\nexport { FIREBASE_TOKEN };\r\n\r\nexport { FirebaseContext };\r\n\r\n","import { useCallback } from \"react\";\r\nimport { call, takeEvery, put } from 'redux-saga/effects';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_ERROR } from './constants';\r\nimport { setClient, unsetClient } from '../client/actions';\r\nimport { FirebaseContext } from '../firebase';\r\n\r\nconst browserHistory = createBrowserHistory();\r\n\r\n\r\nfunction loginApi(action) {\r\n    //return user profile\r\n\r\n\r\n    // if (action.hosting)\r\n    //     do firebase hosting room stuff\r\n    // else\r\n    //     do firebase join room stuff\r\n    console.log(\"api\");\r\n    <FirebaseContext.Consumer>\r\n        {firebase => {\r\n            return <div>accessing Firebase...</div>\r\n        }}\r\n    </FirebaseContext.Consumer>\r\n}\r\n\r\nfunction* loginFlow(action) {\r\n    try {\r\n        console.log(action);\r\n        const login = yield call(loginApi, action);\r\n\r\n        yield put({ type: LOGIN_SUCCESS });\r\n\r\n        yield put(setClient(action.username));\r\n\r\n        browserHistory.push('/moviequiz');\r\n\r\n    } catch (error) {\r\n        console.log('error');\r\n\r\n        yield put({ type: LOGIN_ERROR })\r\n    }\r\n}\r\n\r\nfunction* loginWatcher() {\r\n    yield takeEvery(LOGIN_REQUEST, loginFlow);\r\n}\r\n\r\nexport default loginWatcher;","import { CLIENT_SET, CLIENT_UNSET } from './constants';\r\n\r\nexport function setClient (username) {\r\n    return {\r\n        type: CLIENT_SET,\r\n        username,\r\n    }\r\n}\r\n\r\nexport function unsetClient () {\r\n    return {\r\n        type: CLIENT_UNSET,\r\n    }\r\n}","import { all } from 'redux-saga/effects';\r\nimport LoginSaga from './login/sagas.js';\r\n\r\nexport default function* IndexSagas() {\r\n    yield all([\r\n        LoginSaga()\r\n    ]);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { createBrowserHistory } from 'history';\r\n\r\n\r\n\r\nimport MovieList from './movieList';\r\nimport MovieQuiz from './movieQuiz';\r\nimport Login from './login/index.js';\r\n\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\n\r\nimport IndexReducer from './index-reducer';\r\nimport IndexSagas from './index-sagas';\r\n\r\nimport Firebase, { FirebaseContext } from './firebase';\r\n\r\n\r\nconst browserHistory = createBrowserHistory();\r\n\r\n\r\nconst composeSetup = process.env.NODE_ENV !== 'production' && typeof window === 'object' &&  \r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  IndexReducer, \r\n  composeSetup(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(IndexSagas);\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n\r\n      <Router history = {browserHistory}>\r\n        <Route path='/' exact component={Login} />\r\n        <Route path = '/moviequiz' exact component = {MovieQuiz} />\r\n        <Route path = '/movielist' exact component = {MovieList} />\r\n\r\n        </Router>\r\n      </FirebaseContext.Provider>,\r\n\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}